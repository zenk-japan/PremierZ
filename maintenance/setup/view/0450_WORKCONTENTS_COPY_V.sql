/*-----------------------------------------------------------------------------
-- VIEW名			：WORKCONTENTS_COPY_V
-- 作成者			：zenk
-- 作成日			：2012-02-28
-- 更新履歴			：2012-11-05 IS NULL、IS NOT NULL判定を!=''、=''との複合判定に変更
-----------------------------------------------------------------------------*/
CREATE OR REPLACE VIEW `WORKCONTENTS_COPY_V` AS
	SELECT
			es.`DATA_ID`						 AS `DATA_ID`
		   ,es.`ESTIMATE_ID`					 AS `ESTIMATE_ID`
		   ,es.`ESTIMATE_CODE`					 AS `ESTIMATE_CODE`
		   ,es.`SUB_NUMBER`						 AS `SUB_NUMBER`
		   ,es.`ESTIMATE_USER_ID`				 AS `ESTIMATE_USER_ID`
		   ,es.`ESTIMATE_REQUEST_DATE`			 AS `ESTIMATE_REQUEST_DATE`
		   ,es.`SCHEDULE_FROM_DATE`				 AS `SCHEDULE_FROM_DATE`
		   ,es.`SCHEDULE_TO_DATE`				 AS `SCHEDULE_TO_DATE`
		   ,es.`WORK_NAME`						 AS `WORK_NAME`
		   ,es.`ENDUSER_COMPANY_ID`				 AS `ENDUSER_COMPANY_ID`
		   ,es.`ENDUSER_USER_ID`				 AS `ENDUSER_USER_ID`
		   ,es.`REQUEST_COMPANY_ID`				 AS `REQUEST_COMPANY_ID`
		   ,es.`REQUEST_USER_ID`				 AS `REQUEST_USER_ID`
		   ,es.`SUBMITTING_DATE1`				 AS `SUBMITTING_DATE1`
		   ,es.`SUBMITTING_DATE2`				 AS `SUBMITTING_DATE2`
		   ,es.`SUBMITTING_DATE3`				 AS `SUBMITTING_DATE3`
		   ,es.`SUBMITTING_DATE4`				 AS `SUBMITTING_DATE4`
		   ,es.`SUBMITTING_DATE5`				 AS `SUBMITTING_DATE5`
		   ,es.`FINAL_PRESENTATION_AMOUNT`		 AS `FINAL_PRESENTATION_AMOUNT`
		   ,es.`ORDER_DIVISION`					 AS `ORDER_DIVISION`
		   ,es.`WORK_COMPLETION_DATE`			 AS `WORK_COMPLETION_DATE`
		   ,es.`WORK_DIVISION`					 AS `WORK_DIVISION`
		   ,es.`REMARKS`						 AS `ES_REMARKS`
		   ,es.`BOOK_INPUT_DATE`				 AS `BOOK_INPUT_DATE`
		   ,es.`BILL_SENDING_DATE`				 AS `BILL_SENDING_DATE`
		   ,es.`VALIDITY_FLAG`					 AS `ES_VALIDITY_FLAG`
		   ,wc.`WORK_CONTENT_ID`				 AS `WORK_CONTENT_ID`
		   ,DATE_FORMAT(wc.`WORK_DATE`, '%Y-%m') AS `WORK_DATE_YM`
		   ,wc.`WORK_DATE`						 AS `WORK_DATE`
		   ,`DEFAULT_ENTERING_SCHEDULE_TIMET`
												 AS `DEFAULT_ENTERING_SCHEDULE_TIMET`
		   ,wc.`DEFAULT_LEAVE_SCHEDULE_TIMET`
												 AS `DEFAULT_LEAVE_SCHEDULE_TIMET`
		   ,wc.`DEFAULT_WORKING_TIME`			 AS `DEFAULT_WORKING_TIME`
		   ,wc.`DEFAULT_BREAK_TIME`				 AS `DEFAULT_BREAK_TIME`
		   ,date_format(wc.`AGGREGATE_TIMET`, '%H:%i')
												 AS `AGGREGATE_TIMET`
		   ,wc.`AGGREGATE_POINT`				 AS `AGGREGATE_POINT`
		   ,wc.`WORK_ARRANGEMENT_ID`			 AS `WORK_ARRANGEMENT_ID`
		   ,wc.`WORK_CONTENT_DETAILS`			 AS `WORK_CONTENT_DETAILS`
		   ,wc.`BRINGING_GOODS`					 AS `BRINGING_GOODS`
		   ,wc.`CLOTHES`						 AS `CLOTHES`
		   ,wc.`INTRODUCE`						 AS `INTRODUCE`
		   ,wc.`TRANSPORT_AMOUNT_REMARKS`		 AS `TRANSPORT_AMOUNT_REMARKS`
		   ,wc.`OTHER_REMARKS`					 AS `OTHER_REMARKS`
		   ,wc.`OTHER_COST`						 AS `OTHER_COST`
		   ,wc.`EXCESS_AMOUNT`					 AS `WC_EXCESS_AMOUNT`
		   ,wc.`EXCESS_LIQUIDATION_FLAG`		 AS `EXCESS_LIQUIDATION_FLAG`
		   ,wc.`CANCEL_CHARGE`					 AS `CANCEL_CHARGE`
		   ,wc.`TOTAL_SALES`					 AS `TOTAL_SALES`
		   ,wc.`GROSS_MARGIN`					 AS `GROSS_MARGIN`
		   ,wc.`GROSS_MARGIN_RATE`				 AS `GROSS_MARGIN_RATE`
		   ,wc.`WORK_STATUS`					 AS `WORK_STATUS`
		   ,wc.`VALIDITY_FLAG`					 AS `WC_VALIDITY_FLAG`
		   ,ws.`WORK_STAFF_ID`					 AS `WORK_STAFF_ID`
		   ,ws.`WORK_BASE_ID`					 AS `WORK_BASE_ID`
		   ,co.`COMPANY_ID`						 AS `WORK_USER_COMPANY_ID`
		   ,co.`COMPANY_CODE`					 AS `WORK_USER_COMPANY_CODE`
		   ,co.`COMPANY_NAME`					 AS `WORK_USER_COMPANY_NAME`
		   ,ws.`WORK_USER_ID`					 AS `WORK_USER_ID`
		   ,us.`NAME`							 AS `WORK_USER_NAME`
		   ,ws.`APPROVAL_DIVISION`				 AS `APPROVAL_DIVISION`
		   ,wscm1.`CODE_VALUE`					 AS `APPROVAL_DIVISION_NAME`
		   ,ws.`TRANSMISSION_FLAG`				 AS `TRANSMISSION_FLAG`
		   ,ws.`CANCEL_DIVISION`				 AS `CANCEL_DIVISION`
		   ,wscm2.`CODE_VALUE`					 AS `CANCEL_DIVISION_NAME`
		   ,ws.`WORK_UNIT_PRICE`				 AS `WORK_UNIT_PRICE`
		   ,ws.`EXCESS_AMOUNT`					 AS `WS_EXCESS_AMOUNT`
		   ,ws.`BASIC_TIME`						 AS `BASIC_TIME`
		   ,ws.`BREAK_TIME`						 AS `BREAK_TIME`
		   ,IFNULL(ws.`BREAK_TIME`,0)			 AS `DISP_BREAK_TIME`
		   ,ws.`DISPATCH_SCHEDULE_TIMET`		 AS `DISPATCH_SCHEDULE_TIMET`
		   ,ws.`DISPATCH_STAFF_TIMET`			 AS `DISPATCH_STAFF_TIMET`
		   ,ws.`ENTERING_SCHEDULE_TIMET`
												 AS `ENTERING_SCHEDULE_TIMET`
		   ,ws.`ENTERING_STAFF_TIMET`
												 AS `ENTERING_STAFF_TIMET`
		   ,ws.`ENTERING_MANAGE_TIMET`
												 AS `ENTERING_MANAGE_TIMET`
		   ,IFNULL(ws.`ENTERING_MANAGE_TIMET`,ws.`ENTERING_STAFF_TIMET`)
												 AS `ENTERING_TIMET`
		   ,ws.`LEAVE_SCHEDULE_TIMET`
												 AS `LEAVE_SCHEDULE_TIMET`
		   ,ws.`LEAVE_STAFF_TIMET`
												 AS `LEAVE_STAFF_TIMET`
		   ,ws.`LEAVE_MANAGE_TIMET`
												 AS `LEAVE_MANAGE_TIMET`
		   ,IFNULL(ws.`LEAVE_MANAGE_TIMET`,ws.`LEAVE_STAFF_TIMET`)
												 AS `LEAVE_TIMET`
		   ,ws.`TRANSPORT_AMOUNT`				 AS `TRANSPORT_AMOUNT`
		   ,ws.`OTHER_AMOUNT`					 AS `OTHER_AMOUNT`
		   ,ws.`REMARKS`						 AS `WS_REMARKS`
		   ,ws.`OVERTIME_WORK_AMOUNT`			 AS `OVERTIME_WORK_AMOUNT`
		   ,ws.`WORK_EXPENSE_AMOUNT_TOTAL`		 AS `WORK_EXPENSE_AMOUNT_TOTAL`
		   ,ws.`PAYMENT_AMOUNT_TOTAL`			 AS `PAYMENT_AMOUNT_TOTAL`
		   ,ws.`REAL_WORKING_HOURS`				 AS `REAL_WORKING_HOURS`
		   ,CASE
			  WHEN (ws.`REAL_WORKING_HOURS` IS NOT NULL AND ws.`REAL_WORKING_HOURS` != '')
				THEN IF(ws.`REAL_WORKING_HOURS` - IFNULL(ws.`BREAK_TIME`,0) < 0
					   ,0
					   ,ws.`REAL_WORKING_HOURS` - IFNULL(ws.`BREAK_TIME`,0))
			  WHEN (    ws.`ENTERING_STAFF_TIMET` IS NOT NULL
					AND ws.`LEAVE_STAFF_TIMET` IS NOT NULL
					AND (ws.`REAL_WORKING_HOURS` IS NULL OR ws.`REAL_WORKING_HOURS` = '')
					AND ws.`ENTERING_STAFF_TIMET` != ''
					AND ws.`LEAVE_STAFF_TIMET` != '' )
				THEN IF(IFNULL(HOUR(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) + TRUNCATE((MINUTE(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) / 60) + .005, 2),0) - IFNULL(ws.`BREAK_TIME`,0) < 0
					   ,0
					   ,IFNULL(HOUR(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) + TRUNCATE((MINUTE(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) / 60) + .005, 2),0) - IFNULL(ws.`BREAK_TIME`,0))
			  ELSE 0
			END
												 AS `ACTUAL_WORKING_HOURS`
		   ,ws.`REAL_OVERTIME_HOURS`			 AS `REAL_OVERTIME_HOURS`
		   ,CASE
			  WHEN (ws.`REAL_OVERTIME_HOURS` IS NOT NULL AND ws.`REAL_OVERTIME_HOURS` != '')
				THEN ws.`REAL_OVERTIME_HOURS`
			  WHEN (ws.`REAL_OVERTIME_HOURS` IS NULL OR ws.`REAL_OVERTIME_HOURS` = '')
				THEN IF(IFNULL(HOUR(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) + TRUNCATE((MINUTE(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) / 60) + .005, 2),0) - IFNULL(ws.`BREAK_TIME`,0) - IFNULL(ws.`BASIC_TIME`,8) < 0
					   ,0
					   ,IFNULL(HOUR(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) + TRUNCATE((MINUTE(TIMEDIFF(ws.`LEAVE_STAFF_TIMET`,ws.`ENTERING_STAFF_TIMET`)) / 60) + .005, 2),0) - IFNULL(ws.`BREAK_TIME`,0) - IFNULL(ws.`BASIC_TIME`,8))
			  ELSE 0
			END
												 AS `OVERTIME_HOURS`
		   ,ws.`SUPPLIED_AMOUNT_TOTAL`			 AS `SUPPLIED_AMOUNT_TOTAL`
		   ,ws.`STAFF_STATUS`					 AS `STAFF_STATUS`
		   ,ws.`DISPATCH_DELAY_NOTIFIED`		 AS `DISPATCH_DELAY_NOTIFIED`
		   ,ws.`ENTERING_DELAY_NOTIFIED`		 AS `ENTERING_DELAY_NOTIFIED`
		   ,ws.`LEAVE_DELAY_NOTIFIED`			 AS `LEAVE_DELAY_NOTIFIED`
		   ,ws.`WORK_UNIT_PRICE_DISPLAY_FLAG`	 AS `WORK_UNIT_PRICE_DISPLAY_FLAG`
		   ,ws.`VALIDITY_FLAG`					 AS `WS_VALIDITY_FLAG`
	FROM	
			`ESTIMATES`					es
		   ,`WORK_CONTENTS`				wc
		   ,`WORK_STAFF`				ws
		   ,`USERS`						us
		   ,`WORKSTAFF_SUB1_V`			wscm1
		   ,`WORKSTAFF_SUB3_V`			wscm2
		   ,`COMPANIES`					co
		   ,`GROUPS`					gr
	WHERE	es.`ESTIMATE_ID`	  = wc.`ESTIMATE_ID`
	AND		wc.`WORK_CONTENT_ID`  = ws.`WORK_CONTENT_ID`
	AND		ws.`WORK_USER_ID`	  = us.`USER_ID`
	AND		ws.`WORK_STAFF_ID`	  = wscm1.`WORK_STAFF_ID`
	AND		ws.`WORK_STAFF_ID`	  = wscm2.`WORK_STAFF_ID`
	AND		us.`GROUP_ID`		  = gr.`GROUP_ID`
	AND		gr.`COMPANY_ID`		  = co.`COMPANY_ID`
;
